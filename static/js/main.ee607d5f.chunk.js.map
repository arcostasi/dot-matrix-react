{"version":3,"sources":["App.js","index.js"],"names":["LedMatrix","id","this","props","LedData","map","row","index","React","Component","LedRow","className","led","Led","active","r","g","b","rgba","style","color","App","state","createLedDataBuffer","rows","cols","params","queryString","parse","window","location","search","parseInt","Array","fill","_","listener","setInterval","postMessage","app","command","version","addEventListener","data","neopixels","setState","updateLedData","clearInterval","NeoPixelsData","width","length","height","col","grb","ReactDOM","render","document","getElementById"],"mappings":"2QAIMA,E,4JACJ,WACE,OACE,qBAAKC,GAAG,aAAR,SAEIC,KAAKC,MAAMC,QAAQC,KAAI,SAACC,EAAKC,GAAN,OAAgB,cAAC,EAAD,CAAQD,IAAKA,GAAUC,Y,GALhDC,IAAMC,WAYxBC,E,4JACJ,WACE,OAAO,qBAAKC,UAAU,UAAf,SAEHT,KAAKC,MAAMG,IAAID,KAAI,SAACO,EAAKL,GACvB,OAAO,cAAC,EAAD,CAAKK,IAAKA,GAAUL,Y,GALhBC,IAAMC,WAYrBI,E,4JACJ,WACE,IAAQD,EAAQV,KAAKC,MAAbS,IACFE,EAAUF,EAAIG,EAAI,GAAKH,EAAII,EAAI,GAAKJ,EAAIK,EAAI,EAC5CC,EAAI,eAAWN,EAAIG,EAAf,aAAqBH,EAAII,EAAzB,aAA+BJ,EAAIK,EAAnC,UAEV,OAAIH,EAEA,qBAAKH,UAAU,MAAf,SACE,qBAAKA,UAAU,QAAQQ,MAAO,CAAEC,MAAOF,OAKpC,qBAAKP,UAAU,Y,GAdVH,IAAMC,WA4FTY,E,4MAxEbC,MAAQ,CAAElB,QAAS,EAAKmB,oBAAoB,CAAEC,KAAM,GAAIC,KAAM,M,4CAE9D,WACE,OAAO,cAAC,EAAD,CAAWrB,QAASF,KAAKoB,MAAMlB,Y,iCAGxC,SAAoBD,GAClB,IAAMuB,EAASC,IAAYC,MAAMC,OAAOC,SAASC,QAE7CP,EAAOrB,EAAMqB,KACbC,EAAOtB,EAAMsB,KAgBjB,OAdKC,EAAOF,MAAUQ,SAASN,EAAOF,MAAQ,IAC1CA,EAAOQ,SAASN,EAAOF,OAGtBE,EAAOD,MAAUO,SAASN,EAAOD,MAAQ,IAC1CA,EAAOO,SAASN,EAAOD,OAGdQ,MAAMT,GAAMU,KAAK,GAAG7B,KAC/B,SAAA8B,GAAC,OAAIF,MAAMR,GAAMS,KAAK,GAAG7B,KACvB,SAAA8B,GAAC,MAAK,CAAEpB,EAAG,EAAGC,EAAG,EAAGC,EAAG,W,+BAO7B,WAAqB,IAAD,OAEdmB,EAAWC,aAAY,WACzBR,OAAOS,YACL,CAAEC,IAAK,QAASC,QAAS,SAAUC,QAAS,GAC5C,uBAED,KAEHZ,OAAOa,iBAAiB,WAAW,YAAe,IAAZC,EAAW,EAAXA,KAChCA,EAAKC,YACP,EAAKC,UAAS,SAAAvB,GACZ,MAAO,CAAElB,QAAS,EAAK0C,cAAcH,EAAKC,UAAWtB,EAAMlB,aAEzDgC,IACFW,cAAcX,GACdA,EAAW,Y,2BAMnB,SAAcY,EAAe5C,GAI3B,IAHA,IAAM6C,EAAQ7C,EAAQ,GAAG8C,OACnBC,EAAS/C,EAAQ8C,OAEd5C,EAAM,EAAGA,EAAM6C,EAAQ7C,IAC9B,IAAK,IAAI8C,EAAM,EAAGA,EAAMH,EAAOG,IAAO,CAEpC,IAAMC,EAAML,EAAe1C,EAAM2C,EAASG,GAEtCrC,EAAKsC,GAAO,EAAK,IACjBrC,EAAKqC,GAAO,GAAM,IAClBpC,EAAU,IAANoC,EAERjD,EAAQE,GAAK8C,GAAO,CAAErC,EAAGA,EAAGC,EAAGA,EAAGC,EAAGA,GAIzC,OAAOb,M,GArEOI,IAAMC,W,MC1CxB6C,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.ee607d5f.chunk.js","sourcesContent":["import React from 'react';\nimport queryString from 'query-string';\nimport './App.css';\n\nclass LedMatrix extends React.Component {\n  render() {\n    return (\n      <div id=\"led-matrix\">\n        {\n          this.props.LedData.map((row, index) => <LedRow row={row} key={index} />)\n        }\n      </div>\n    )\n  }\n}\n\nclass LedRow extends React.Component {\n  render() {\n    return <div className=\"led-row\">\n      {\n        this.props.row.map((led, index) => {\n          return <Led led={led} key={index} />\n        })\n      }\n    </div>\n  }\n}\n\nclass Led extends React.Component {\n  render() {\n    const { led } = this.props;\n    const active = (led.r > 0 || led.g > 0 || led.b > 0) ? true : false;\n    const rgba = `rgba(${led.r}, ${led.g}, ${led.b}, 1.0)`;\n\n    if (active) {\n      return (\n        <div className=\"led\">\n          <div className=\"color\" style={{ color: rgba }}></div>\n        </div>\n      )\n    }\n    else {\n      return <div className=\"led\"></div>\n    }\n  }\n}\n\nclass App extends React.Component {\n  state = { LedData: this.createLedDataBuffer({ rows: 16, cols: 16 }) }\n\n  render() {\n    return <LedMatrix LedData={this.state.LedData} />\n  }\n\n  createLedDataBuffer(props) {\n    const params = queryString.parse(window.location.search);\n\n    let rows = props.rows;\n    let cols = props.cols;\n\n    if ((params.rows) && (parseInt(params.rows) > 0)) {\n        rows = parseInt(params.rows);\n    }\n\n    if ((params.cols) && (parseInt(params.cols) > 0)) {\n        cols = parseInt(params.cols);\n    }\n\n    const data = Array(rows).fill(0).map(\n      _ => Array(cols).fill(0).map(\n        _ => ({ r: 0, g: 0, b: 0 })\n      )\n    );\n\n    return data;\n  }\n\n  componentDidMount() {\n    // Workaround for a Wokwi sometimes missing the first message\n    let listener = setInterval(() => {\n      window.postMessage(\n        { app: \"wokwi\", command: \"listen\", version: 1 },\n        \"https://wokwi.com\"\n      );\n    }, 100);\n\n    window.addEventListener(\"message\", ({ data }) => {\n      if (data.neopixels) {\n        this.setState(state => {\n          return { LedData: this.updateLedData(data.neopixels, state.LedData) };\n        });\n        if (listener) {\n          clearInterval(listener);\n          listener = null;\n        }\n      }\n    });\n  }\n\n  updateLedData(NeoPixelsData, LedData) {\n    const width = LedData[0].length;\n    const height = LedData.length;\n\n    for (let row = 0; row < height; row++) {\n      for (let col = 0; col < width; col++) {\n\n        const grb = NeoPixelsData[(row * width) + col];\n\n        let r = (grb >> 8) & 0xff;\n        let g = (grb >> 16) & 0xff;\n        let b = grb & 0xff;\n\n        LedData[row][col] = { r: r, g: g, b: b };\n      }\n    }\n\n    return LedData;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('app')\n);\n"],"sourceRoot":""}